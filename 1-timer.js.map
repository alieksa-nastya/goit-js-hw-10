{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst dateTimePicker = document.querySelector('#datetime-picker');\nconst button = document.querySelector('.btn');\nconst daysAmount = document.querySelector('[data-days]');\nconst hoursAmount = document.querySelector('[data-hours]');\nconst minutesAmount = document.querySelector('[data-minutes]');\nconst secondsAmount = document.querySelector('[data-seconds]');\n\n// let timerId = null;\n// let selectedDate = null;\n\n// button.addEventListener('click', createTimer);\n\n// const options = {\n//   enableTime: true,\n//   time_24hr: true,\n//   defaultDate: new Date(),\n//   minuteIncrement: 1,\n//   onClose(selectedDates) {\n//     if(selectedDates[0] < new Date()) {\n//       return iziToast.error({\n//         title: 'Error',\n//         message: 'Please choose a date in the future',\n//         position: 'topRight',\n//         color: 'red',\n//         timeout: 5000,\n//       })\n//     }\n//     selectedDate = selectedDates[0];\n//     button.removeAttribute('disabled');\n//   },\n// };\n\n// flatpickr(dateTimePicker, options);\n\n// function createTimer() {\n//   timerId = setInterval(updateTimer, 1000);\n//   button.setAttribute('disabled', true);\n//   dateTimePicker.setAttribute('disabled', true)\n// }\n\n// function updateTimer() {\n//   const time = selectedDate - new Date();\n//   const{days, hours, minutes, seconds} = convertMs(time);\n//   daysAmount.textContent = addLeadingZero(days);\n//   hoursAmount.textContent = addLeadingZero(hours);\n//   minutesAmount.textContent = addLeadingZero(minutes);\n//   secondsAmount.textContent = addLeadingZero(seconds);\n\n//   if(time<1000) {\n//     clearInterval(timerId)\n//     dateTimePicker.removeAttribute('disabled');\n//   }\n// }\n\n// function addLeadingZero(value) {\n//   return String(value).padStart(2, 0);\n// }\n\n\n// function convertMs(ms) {\n//   const second = 1000;\n//   const minute = second * 60;\n//   const hour = minute * 60;\n//   const day = hour * 24;\n//   const days = Math.floor(ms / day);\n//   const hours = Math.floor((ms % day) / hour);\n//   const minutes = Math.floor(((ms % day) % hour) / minute);\n//   const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n//   return { days, hours, minutes, seconds };\n// }\n\n\nlet userSelectedDate = null;\nlet countdownInterval = null;\n\nbutton.disabled = true;\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n\n      if(userSelectedDate < new Date()) {\n        iziToast.error({\n            title: 'Error',\n            message: 'Please choose a date in the future',\n            position: 'topRight',\n            color: 'red',\n            timeout: 5000,\n        });\n        button.disabled = true;\n      } else {\n        button.disabled = false;\n      }\n    },\n  };\n\nflatpickr(\"#datetime-picker\", options);\n\nfunction addLeadingZero(value) {\n    return String(value).padStart(2, '0');\n  };\n\n  function updatedTime(days, hours, minutes, seconds) {\n    daysAmount.textContent = addLeadingZero(days);\n    hoursAmount.textContent = addLeadingZero(hours);\n    minutesAmount.textContent = addLeadingZero(minutes);\n    secondsAmount.textContent = addLeadingZero(seconds);\n  };\n\n  function convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n    return { days, hours, minutes, seconds };\n  };\n  \n  console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\n  console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\n  console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\n\nbutton.addEventListener('click', () => {\n    if(!userSelectedDate) return;\n\n    button.disabled = true;\n    dateTimePicker.disabled = true;\n\n    countdownInterval = setInterval(() => {\n        const timeLeft = userSelectedDate - new Date();\n        if(timeLeft <= 0) {\n            clearInterval(countdownInterval);\n            updatedTime(0, 0, 0, 0);\n\n            iziToast.success({\n                title: 'Completed',\n                message: \"The countdown has ended!\",\n                position: 'topRight',\n            });\n\n            dateTimePicker.disabled = false;\n            return;\n        }\n        \n        const {days, hours, minutes, seconds} = convertMs(timeLeft);\n        updatedTime(days, hours, minutes, seconds);\n    }, 1000);\n});\n\n\n"],"names":["dateTimePicker","button","daysAmount","hoursAmount","minutesAmount","secondsAmount","userSelectedDate","countdownInterval","options","selectedDates","iziToast","flatpickr","addLeadingZero","value","updatedTime","days","hours","minutes","seconds","convertMs","ms","timeLeft"],"mappings":"+IAKA,MAAMA,EAAiB,SAAS,cAAc,kBAAkB,EAC1DC,EAAS,SAAS,cAAc,MAAM,EACtCC,EAAa,SAAS,cAAc,aAAa,EACjDC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAgB,SAAS,cAAc,gBAAgB,EACvDC,EAAgB,SAAS,cAAc,gBAAgB,EAoE7D,IAAIC,EAAmB,KACnBC,EAAoB,KAExBN,EAAO,SAAW,GAElB,MAAMO,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACvBH,EAAmBG,EAAc,CAAC,EAE7BH,EAAmB,IAAI,MACxBI,EAAS,MAAM,CACX,MAAO,QACP,QAAS,qCACT,SAAU,WACV,MAAO,MACP,QAAS,GACrB,CAAS,EACDT,EAAO,SAAW,IAElBA,EAAO,SAAW,EAErB,CACL,EAEAU,EAAU,mBAAoBH,CAAO,EAErC,SAASI,EAAeC,EAAO,CAC3B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CAExC,CACE,SAASC,EAAYC,EAAMC,EAAOC,EAASC,EAAS,CAClDhB,EAAW,YAAcU,EAAeG,CAAI,EAC5CZ,EAAY,YAAcS,EAAeI,CAAK,EAC9CZ,EAAc,YAAcQ,EAAeK,CAAO,EAClDZ,EAAc,YAAcO,EAAeM,CAAO,CAEtD,CACE,SAASC,EAAUC,EAAI,CAMrB,MAAML,EAAO,KAAK,MAAMK,EAAK,KAAG,EAC1BJ,EAAQ,KAAK,MAAOI,EAAK,MAAO,IAAI,EACpCH,EAAU,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,EACjDF,EAAU,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAE1C,CACE,QAAQ,IAAIC,EAAU,GAAI,CAAC,EAC3B,QAAQ,IAAIA,EAAU,IAAM,CAAC,EAC7B,QAAQ,IAAIA,EAAU,MAAQ,CAAC,EAGjClB,EAAO,iBAAiB,QAAS,IAAM,CAC/BK,IAEJL,EAAO,SAAW,GAClBD,EAAe,SAAW,GAE1BO,EAAoB,YAAY,IAAM,CAClC,MAAMc,EAAWf,EAAmB,IAAI,KACxC,GAAGe,GAAY,EAAG,CACd,cAAcd,CAAiB,EAC/BO,EAAY,EAAG,EAAG,EAAG,CAAC,EAEtBJ,EAAS,QAAQ,CACb,MAAO,YACP,QAAS,2BACT,SAAU,UAC1B,CAAa,EAEDV,EAAe,SAAW,GAC1B,MACH,CAED,KAAM,CAAC,KAAAe,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAIC,EAAUE,CAAQ,EAC1DP,EAAYC,EAAMC,EAAOC,EAASC,CAAO,CAC5C,EAAE,GAAI,EACX,CAAC"}