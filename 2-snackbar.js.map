{"version":3,"file":"2-snackbar.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst form = document.querySelector('.form');\nconst delayInput = form.querySelector('input[name=\"delay\"]');\nconst radioButtons = form.querySelectorAll('input[name=\"state\"]');\nconst button = form.querySelector('button');\n\nform.addEventListener('submit', (event) => {\n    event.preventDefault();\n\n    const delay = parseInt(delayInput.value);\n    const state = Array.from(radioButtons).find(radio => radio.checked)?.value;\n\n    if(!state) return;\n\n    const promise = new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if(state === 'fulfilled') {\n                resolve(delay);\n            } else if (state === 'rejected') {\n                reject(delay);\n            }\n        }, delay);\n    });\n\n    promise \n.then(delay => {\n    iziToast.success({\n        title: 'Success',\n        message: `✅ Fulfilled promise in ${delay}ms`,\n        position: 'topRight',\n        color: 'green',\n    });\n})\n.catch(delay => {\n    iziToast.error({\n        title:'Error',\n        message: `❌ Rejected promise in ${delay}ms`,\n        position: 'topRight',\n        color: 'red',\n    });\n});\n\ndelayInput.value =\"\";\nradioButtons.forEach(radio => radio.checked = false);\n});\n\n// const form = document.querySelector('.form');\n// form.addEventListener('submit', onFormSubmit);\n\n// function onFormSubmit(e) {\n//     e.preventDefault();\n//     const{delay, state} = e.currentTarget.elements;\n//     createPromise(delay.value, state.value).then(data => iziToast.success({position: \"topRight\", color: 'green', title: 'Success', message: `✅ Fulfilled promise in ${delay}ms`}).catch(data => iziToast.error({title:'Error', message: `❌ Rejected promise in ${delay}ms`, position: 'topRight',color: 'red'})))\n// }\n\n// function createPromise(delay, state) {\n//     return new Promise((resolve, reject) => {\n//         setTimeout(() => {\n//         if(state === 'fulfilled') {\n//         resolve(delay);\n//         } else if (state === 'rejected') {\n//         reject(delay);\n//         }\n//         }, delay);\n//     }) \n// }\n"],"names":["form","delayInput","radioButtons","event","delay","state","_a","radio","resolve","reject","iziToast"],"mappings":"mIAGA,MAAMA,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAaD,EAAK,cAAc,qBAAqB,EACrDE,EAAeF,EAAK,iBAAiB,qBAAqB,EACjDA,EAAK,cAAc,QAAQ,EAE1CA,EAAK,iBAAiB,SAAWG,GAAU,OACvCA,EAAM,eAAc,EAEpB,MAAMC,EAAQ,SAASH,EAAW,KAAK,EACjCI,GAAQC,EAAA,MAAM,KAAKJ,CAAY,EAAE,KAAKK,GAASA,EAAM,OAAO,IAApD,YAAAD,EAAuD,MAErE,GAAG,CAACD,EAAO,OAEK,IAAI,QAAQ,CAACG,EAASC,IAAW,CAC7C,WAAW,IAAM,CACVJ,IAAU,YACTG,EAAQJ,CAAK,EACNC,IAAU,YACjBI,EAAOL,CAAK,CAEnB,EAAEA,CAAK,CAChB,CAAK,EAGJ,KAAKA,GAAS,CACXM,EAAS,QAAQ,CACb,MAAO,UACP,QAAS,0BAA0BN,CAAK,KACxC,SAAU,WACV,MAAO,OACf,CAAK,CACL,CAAC,EACA,MAAMA,GAAS,CACZM,EAAS,MAAM,CACX,MAAM,QACN,QAAS,yBAAyBN,CAAK,KACvC,SAAU,WACV,MAAO,KACf,CAAK,CACL,CAAC,EAEDH,EAAW,MAAO,GAClBC,EAAa,QAAQK,GAASA,EAAM,QAAU,EAAK,CACnD,CAAC"}